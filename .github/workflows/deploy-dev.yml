name: Deploy to dev

on:
  push:
    branches:
      - '**'

env:
  IMAGE: docker.pkg.github.com/${{ github.repository }}/farskapsportal-ui:${{ github.sha }}

jobs:
  build:
    name: Build and push Docker container
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Define client-side environment variables for main
        if: github.ref == 'refs/heads/main'
        run: |
          echo "REACT_APP_URL=https://farskapsportal.dev.nav.no" >> $GITHUB_ENV
          echo "REACT_APP_LOGINSERVICE_URL=https://loginservice.dev.nav.no/login" >> $GITHUB_ENV

      - name: Define client-side environment variables for feature
        if: github.ref != 'refs/heads/main'
        run: |
          echo "REACT_APP_URL=https://farskapsportal-feature.dev.nav.no" >> $GITHUB_ENV
          echo "REACT_APP_LOGINSERVICE_URL=https://loginservice.dev.nav.no/login" >> $GITHUB_ENV

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies (yarn install)
        run: yarn install --production --ignore-scripts --ignore-optional --frozen-lockfile

      - name: Run tests (yarn test)
        run: yarn test

      - name: Build frontend (yarn build)
        run: yarn build

      - name: Build and publish Docker image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker build --tag ${IMAGE} .
          docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
          docker push ${IMAGE}

  deploy:
    name: Deploy to NAIS
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Deploy to dev-gcp for main
        if: github.ref == 'refs/heads/main'
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .nais/nais.yaml
          VARS: .nais/dev.yaml

      - name: Deploy to dev-gcp for feature
        if: github.ref != 'refs/heads/main'
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .nais/nais.yaml
          VARS: .nais/feature.yaml
