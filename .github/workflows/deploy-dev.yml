name: Deploy to dev

on:
  push:
    branches:
      - '**'

env:
  GITHUB_USERNAME: x-access-token
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: Build and push Docker container
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"
    outputs:
      image: ${{ steps.docker-push.outputs.image }}
      tag: ${{ steps.docker-push.outputs.tag }}
    steps:
      - uses: actions/checkout@v4

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies (yarn install)
        run: yarn install --production --ignore-scripts --ignore-optional --frozen-lockfile

      - name: Run tests (yarn test)
        run: yarn test

      - name: Build frontend (yarn build)
        run: yarn build

      - uses: nais/docker-build-push@v0
        id: docker-push
        with:
          team: farskapsportal
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}

  deploy:
    name: Deploy to NAIS
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Deploy to dev-gcp for main
        if: github.ref == 'refs/heads/main'
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .nais/nais.yaml
          VARS: .nais/dev.yaml
          IMAGE: ${{ needs.build.outputs.image }}

      - name: Deploy to dev-gcp for feature
        if: github.ref != 'refs/heads/main'
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .nais/nais.yaml
          VARS: .nais/feature.yaml
          IMAGE: ${{ needs.build.outputs.image }}
